import React, { useState, useEffect } from 'react';
import axios from 'axios';
import Select from 'react-select';

function CreateProjectForm({ onSubmit }) {
  const [projectName, setProjectName] = useState('');
  const [startDate, setStartDate] = useState('');
  const [endDate, setEndDate] = useState('');
  const [teamLeader, setTeamLeader] = useState(null);
  const [selectedEmployees, setSelectedEmployees] = useState([]);
  const [listRegularEmployees, setListRegularEmployees] = useState([]);
  const [listTeamLeaders, setListTeamLeaders] = useState([]);

  useEffect(() => {
    async function fetchRegularEmployees() {
      try {
        const response = await axios.get('http://localhost:8080/employees/byRole/REGULAR_EMPLOYEE');
        console.log(response)
        const options = response.data.map(employee => ({
          value: employee.employeeId,
          label: employee.employeeName
        }));
        setListRegularEmployees(options);
      } catch (error) {
        console.error('Error fetching regular employees:', error);
      }
    }

    async function fetchTeamLeaders() {
      try {
        const response = await axios.get('http://localhost:8080/employees/byRole/TEAM_LEADER');
        const options = response.data.map(employee => ({
          value: employee.employeeId,
          label: employee.employeeName
        }));
        setListTeamLeaders(options);
      } catch (error) {
        console.error('Error fetching team leaders:', error);
      }
    }

    fetchRegularEmployees();
    fetchTeamLeaders();
  }, []);

  const handleFormSubmit = async (e) => {
    e.preventDefault();

    // Create a project object to submit
    const projectData = {
      teamLeader: {
        employeeId: teamLeader.value,
        employeeName: teamLeader.label
      },
      employees: selectedEmployees.map(employee => ({
        employeeId: employee.value,
        employeeName: employee.label
      })),
      projectId: null, // You can set this to null as it's auto-generated by the backend
      projectName,
      startDate,
      expectedEndDate: endDate // Define expectedEndDate here
    };

    try {
      const response = await axios.post('http://localhost:8080/projects', projectData);
      console.log('Project created:', response.data);
      // You can perform additional actions on successful response
    } catch (error) {
      console.error('Error creating project:', error);
    }
  };

  return (
    <form onSubmit={handleFormSubmit}>
      <div className="mb-4">
        <label htmlFor="projectName" className="block font-medium text-gray-700">
          Project Name
        </label>
        <input
          type="text"
          id="projectName"
          name="projectName"
          value={projectName}
          onChange={(e) => setProjectName(e.target.value)}
          className="mt-1 p-2 border rounded-md w-full"
        />
      </div>

      {/* ... (other form fields) */}
      
      <div className="mb-4">
        <label className="block font-medium text-gray-700">Team Leader</label>
        <Select
          options={listTeamLeaders}
          value={teamLeader}
          onChange={setTeamLeader}
        />
      </div>

      <div className="mb-4">
        <label className="block font-medium text-gray-700">Selected Employees</label>
        <Select
          options={listRegularEmployees}
          isMulti
          value={selectedEmployees}
          onChange={setSelectedEmployees}
        />
      </div>
      <div className="mb-4">
        <label htmlFor="startDate" className="block font-medium text-gray-700">
          Start Date
        </label>
        <input
          type="date"
          id="startDate"
          name="startDate"
          value={startDate}
          onChange={(e) => setStartDate(e.target.value)}
          className="mt-1 p-2 border rounded-md w-full"
        />
      </div>

      <div className="mb-4">
        <label htmlFor="endDate" className="block font-medium text-gray-700">
          End Date
        </label>
        <input
          type="date"
          id="endDate"
          name="endDate"
          value={endDate}
          onChange={(e) => setEndDate(e.target.value)}
          className="mt-1 p-2 border rounded-md w-full"
        />
      </div>

      <button type="submit" className="bg-blue-500 text-white py-2 px-4 rounded">
        Create Project
      </button>
    </form>
  );
}

export default CreateProjectForm;
